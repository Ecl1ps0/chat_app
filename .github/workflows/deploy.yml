name: CI/CD Pipeline for CRUD App

on:
  push:
    branches:
      - main

jobs:
#  dast:
#    runs-on: ubuntu-latest
#    name: OWASP ZAP Baseline Scan
#
#    steps:
#      - name: Set up zap-reports directory
#        run: |
#          mkdir -p zap-reports
#          chmod -R 777 zap-reports
#
#      - name: DockerHub Login
#        run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin
#
#      - name: Pull OWASP ZAP Docker Image
#        run: docker pull ghcr.io/zaproxy/zaproxy:stable
#
#      - name: Run OWASP ZAP Baseline Scan
#        run: |
#          docker run --rm -v $(pwd)/zap-reports:/zap/wrk/:rw ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
#            -t http://16.171.65.117:8080 \
#            -r zap-report.html \
#            -J zap-report.json \
#            -m 3
#
#      - name: Upload ZAP HTML Report
#        uses: actions/upload-artifact@v4
#        with:
#          name: zap-report
#          path: zap-reports/zap-report.html

  deploy:
    runs-on: self-hosted
#    needs: dast

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build and Push Docker Images
        run: |
          docker build --build-arg VITE_DOMAIN_HTTPS=http://16.171.65.117:8080 --build-arg VITE_DOMAIN_WSS=ws://16.171.65.117:8080 -t ${{ secrets.DOCKER_USER }}/chatapp-frontend ./chat-app-frontend --progress=plain --no-cache
          docker build -t ${{ secrets.DOCKER_USER }}/chatapp-backend . --progress=plain --no-cache
          docker push ${{ secrets.DOCKER_USER }}/chatapp-frontend
          docker push ${{ secrets.DOCKER_USER }}/chatapp-backend

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MANAGER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./docker-compose.yml"
          target: "/home/ubuntu/deploy"

      - name: SSH to Manager and Deploy Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MANAGER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/deploy
            docker stack deploy -c docker-compose.yml chatapp
